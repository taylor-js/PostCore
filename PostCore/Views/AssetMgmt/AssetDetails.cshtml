@model PostCore.Models.CompositionCollection;
@using Microsoft.AspNetCore.Mvc.ViewFeatures;
@using Microsoft.AspNetCore.Mvc.Rendering;
@using System.Threading.Tasks;
@{
    ViewBag.Title = "Asset Details";
}

<div class="container">
    <br />
    <h2>Details for Asset ID @Model.AM.Assetid</h2>
    @* ROW 1 *@
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.Label("Asset ID", "Asset ID", htmlAttributes: new { @for = "D_Assetid", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetid, new { htmlAttributes = new { @id = "D_Assetid", @class = "form-control", @placeholder = "Asset ID" } })
                @Html.ValidationMessageFor(model => model.AM.Assetid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.Label("Asset Type", "Asset Type", htmlAttributes: new { @for = "D_AssetType", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assettype, new { htmlAttributes = new { @id = "D_AssetType", @class = "form-control", @placeholder = "Asset Type" } })
                @Html.ValidationMessageFor(model => model.AM.Assettype, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 2 *@
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.Label("Asset Name", "Asset Name", htmlAttributes: new { @for = "D_AssetName", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetname, new { htmlAttributes = new { @id = "D_AssetName", @class = "form-control", @placeholder = "Asset Name" } })
                @Html.ValidationMessageFor(model => model.AM.Assetname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.Label("Manufacturer", "Manufacturer", htmlAttributes: new { @for = "D_AssetManufacturer", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetmanufacturer, new { htmlAttributes = new { @id = "D_AssetManufacturer", @class = "form-control", @placeholder = "Manufacturer" } })
                @Html.ValidationMessageFor(model => model.AM.Assetmanufacturer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 3 *@
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.Label("Asset Category", "Asset Category", htmlAttributes: new { @for = "D_AssetCategory", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetcategory, new { htmlAttributes = new { @id = "D_AssetCategory", @class = "form-control", @placeholder = "Asset Category" } })
                @Html.ValidationMessageFor(model => model.AM.Assetcategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.Label("Work Order", "Work Order", htmlAttributes: new { @for = "D_AssetWorkOrderNumber", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetworkordernumber, new { htmlAttributes = new { @id = "D_AssetWorkOrderNumber", @class = "form-control", @placeholder = "Work Order" } })
                @Html.ValidationMessageFor(model => model.AM.Assetworkordernumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 4 *@
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.Label("Purchase Order", "Purchase Order", htmlAttributes: new { @for = "D_AssetPurchaseOrderNumber", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetpurchaseordernumber, new { htmlAttributes = new { @id = "D_AssetPurchaseOrderNumber", @class = "form-control", @placeholder = "Purchase Order" } })
                @Html.ValidationMessageFor(model => model.AM.Assetpurchaseordernumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.Label("Project Date", "Project Date", htmlAttributes: new { @for = "D_AssetDate", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetdate, "{0:MM/dd/yyyy}", new { htmlAttributes = new { @id = "D_AssetDate", @class = "form-control", @placeholder = "Project Date" } })
                @Html.ValidationMessageFor(model => model.AM.Assetdate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 5 *@
    <div class="form-row">
        <div class="form-group col-md-6">
            @Html.Label("Project Manager", "Project Manager", htmlAttributes: new { @for = "D_AssetProjectManager", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetprojectmanager, new { htmlAttributes = new { @id = "D_AssetProjectManager", @class = "form-control", @placeholder = "Project Manager" } })
                @Html.ValidationMessageFor(model => model.AM.Assetprojectmanager, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.Label("Project Amount", "Project Amount", htmlAttributes: new { @for = "D_AssetEquipmentAmount", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetequipmentamount, new { htmlAttributes = new { @id = "D_AssetEquipmentAmount", @class = "form-control", @placeholder = "Project Amount" } })
                @Html.ValidationMessageFor(model => model.AM.Assetequipmentamount, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 6 *@
    <div class="form-row">
        <div class="form-group col-md-12">
            @Html.Label("Equipment Description", "Equipment Description", htmlAttributes: new { @for = "D_AssetDescription", @class = "control-label font-weight-bold" })
            <div class="">
                @Html.DisplayFor(model => model.AM.Assetdescription, new { htmlAttributes = new { @id = "D_AssetDescription", @class = "form-control", @placeholder = "Equipment Description" } })
                @Html.ValidationMessageFor(model => model.AM.Assetdescription, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @* ROW 7 *@
    <div class="form-group">
        <a asp-controller="AssetMgmt" asp-action="_AssetUpdate" asp-route-id="@Model.AM.Uniqueassetid" data-toggle="modal" data-target="#updateAssetModal" class="center btn btn-primary" style="font-size:20px;">Update</a>
        <a asp-controller="AssetMgmt" asp-action="_AssetDelete" asp-route-id="@Model.AM.Uniqueassetid" data-toggle="modal" data-target="#deleteAssetModal" class="center btn btn-danger" style="font-size:20px;">Delete</a>
    </div>
</div>
<div class="modal fade" id="updateAssetModal" role="dialog" data-url="@Url.Action("_AssetUpdate", "AssetMgmt", new { id = Model.AM.Uniqueassetid })">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateAssetModalLabel">Update Asset Record @Model.AM.Assetid</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="update-asset-modal-body-content">
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteAssetModal" role="dialog" data-url="@Url.Action("_AssetDelete", "AssetMgmt", new { id = Model.AM.Uniqueassetid })">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAssetModalLabel">Are you sure you want to delete asset record @Model.AM.Assetid?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="delete-asset-modal-body-content">
                <h5>Are you sure you want to delete this?</h5>
                <br />

            </div>
        </div>
    </div>
</div>
<br />

@{
    await Html.RenderPartialAsync("_ContentGrid", Model);
}

<br />

@{
    await Html.RenderPartialAsync("_DistribGrid", Model);
}

@section scripts {
    <!-- Asset Update and Delete JavaScript -->
    <script>
        $(function () {
            $('#updateAssetModal, #deleteAssetModal').on('show.bs.modal', function (e) {
                var url = $(this).data('url');
                var modalBody = $(this).find('.modal-body');
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'html',
                    success: function (data) {
                        modalBody.html(data);
                    },
                    error: function () {
                        modalBody.html('<div class="alert alert-danger">Failed to load content.</div>');
                    }
                });
            });
        });
    </script>

    <!-- Content JavaScript Datatable -->
    <script>
        $(document).ready(function () {
            $('#amcontents-table').DataTable({
                "ajax": {
                    "url": "/AMContent/GetAMContentData?id=" + '@Model.AM.Uniqueassetid',
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": function (json) {
                        console.log(json);
                        return json.data.$values;
                    }
                },
                "columns": [
                    { "data": "Assetcontentnumber" },
                    { "data": "Assetcontentdescription" },
                    { "data": "Assetcontentversion" },
                    {
                        "data": "Assetcontentdateassigned", "render": function (data, type, row) {
                            return moment(data).format('MM/DD/YYYY');
                        }
                    },
                    {
                        "data": "Uniqueassetidcont",
                        "render": function (data, type, row) {
                            var updateContentsUrl = `/AMContent/_ContentUpdate/${data}?c_id=${row.Uniquecontentid}`;
                            return `<button id='updateContentButton_${row.Uniquecontentid}' class='btn btn-primary update-content-button' data-toggle='modal' data-target='#updateContentModal_${row.Uniquecontentid}' data-url='${updateContentsUrl}'>Update</button>`;
                        }
                    },
                    {
                        "data": "Uniqueassetidcont",
                        "render": function (data, type, row) {
                            var deleteContentsUrl = `/AMContent/_ContentDelete/${data}?c_id=${row.Uniquecontentid}`;
                            return `<button id='deleteContentButton_${row.Uniquecontentid}' class='btn btn-danger delete-content-button' data-toggle='modal' data-target='#deleteContentModal_${row.Uniquecontentid}' data-url='${deleteContentsUrl}'>Delete</button>`;
                        }
                    },
                ],
                layout: {
                    topStart: function () {
                        let banner = document.createElement('div');
                        banner.innerHTML = '<h3>Content</h3>';

                        return banner;
                    },
                    topEnd: {
                        buttons: [
                            {
                                text: 'Create',
                                className: 'btn btn-success',
                                action: function (e, dt, node, config) {
                                    $('#createContentModal').modal('show');
                                },
                                init: function (api, node, config) {
                                    $(node).removeClass('dt-button')
                                }
                            }
                        ]
                    }
                },
                initComplete: () => { $(".table").show(); },
                responsive: true,
                searching: false,
                paging: false,
                ordering: false,
                info: false
            });
        });
    </script>
    <!-- Distribution JavaScript Datatable -->
    <script>
        $(document).ready(function () {
            $('#amdistribs-table').DataTable({
                "ajax": {
                    "url": "/AMDistrib/GetAMDistribData?id=" + '@Model.AM.Uniqueassetid',
                    "type": "GET",
                    "datatype": "json",
                    "dataSrc": function (json) {
                        console.log(json);
                        return json.data.$values;
                    },
                },
                "columns": [
                    { "data": "Assetdistributionowner" },
                    { "data": "Assetdistributionlocation" },
                    { "data": "Assetdistributionquantity" },
                    {
                        "data": "Assetdistributiondateassigned", "render": function (data, type, row) {
                            return moment(data).format('MM/DD/YYYY');
                        }
                    },
                    {
                        "data": "Uniqueassetiddistr",
                        "render": function (data, type, row) {
                            var updateDistribsUrl = `/AMDistrib/_DistribUpdate/${data}?d_id=${row.Uniquedistributionid}`;
                            return `<button id='updateDistribButton_${row.Uniquedistributionid}' class='btn btn-primary update-distrib-button' data-toggle='modal' data-target='#updateDistribModal_${row.Uniquedistributionid}' data-url='${updateDistribsUrl}'>Update</button>`;
                        }
                    },
                    {
                        "data": "Uniqueassetiddistr",
                        "render": function (data, type, row) {
                            var deleteDistribsUrl = `/AMDistrib/_DistribDelete/${data}?d_id=${row.Uniquedistributionid}`;
                            return `<button id='deleteistribButton_${row.Uniquedistributionid}' class='btn btn-danger delete-distrib-button' data-toggle='modal' data-target='#deleteDistribModal_${row.Uniquedistributionid}' data-url='${deleteDistribsUrl}'>Delete</button>`;
                        }
                    },
                ],
                layout: {
                    topStart: function () {
                        let banner = document.createElement('div');
                        banner.innerHTML = '<h3>Distribution</h3>';

                        return banner;
                    },
                    topEnd: {
                        buttons: [
                            {
                                text: 'Create',
                                className: 'btn btn-success',
                                action: function (e, dt, node, config) {
                                    $('#createDistribModal').modal('show');
                                },
                                init: function (api, node, config) {
                                    $(node).removeClass('dt-button')
                                }
                            }
                        ]
                    }
                },
                initComplete: () => { $(".table").show(); },
                responsive: true,
                searching: false,
                paging: false,
                ordering: false,
                info: false
            });
        });
    </script>
    <!-- Content & Distribution Create Update and Delete JavaScript -->
    <script>
        // Function to handle AJAX request
        function loadModalContent(url, modalId) {
            var modalBody = $(modalId).find('.modal-body');
            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'html',
                success: function (data) {
                    modalBody.html(data);
                },
                error: function () {
                    modalBody.html('<div class="alert alert-danger">Failed to load content.</div>');
                }
            });
        }

        // Function to bind events to modals for showing
        function bindCreateModalShowEvent(modalSelector) {
            $(modalSelector).on('show.bs.modal', function (e) {
                var url = $(this).data('url');
                loadModalContent(url, modalSelector);
            });
        }

        // Function to bind events to buttons for updating and deleting
        function bindUpdateDeleteEvents(buttonSelector, modalDataAttr) {
            $(document).on('click', buttonSelector, function () {
                var url = $(this).data('url');
                var modalId = $(this).data('target');
                loadModalContent(url, modalId);
            });
        }

        // Initialize modal show events
        bindCreateModalShowEvent('#createContentModal');
        bindCreateModalShowEvent('#createDistribModal');

        // Initialize update/delete button events
        bindUpdateDeleteEvents('#amcontents-table .update-content-button, #amcontents-table .delete-content-button', '#createContentModal');
        bindUpdateDeleteEvents('#amdistribs-table .update-distrib-button, #amdistribs-table .delete-distrib-button', '#createDistribModal');
    </script>

}